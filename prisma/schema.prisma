// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  name String
  email String
  password String
  role Role 
  contactNo        String
  address          String
  profileImg       String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  feedback Feedback[]
  order Order[]
  @@map("user")
}

model Category {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  services     Service[]

  @@map("category")
}

model Service{
  id        String @id @default(uuid())
  title     String
  details   String
  photo     String
  fee       String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  categoryId       String // Assuming categoryId is a UUID as well
  category         Category          @relation(fields: [categoryId], references: [id])
  feedback Feedback[]
  
  @@map("service")

}

model Feedback{
   id       String   @id @default(uuid())
  review    String
  rating    Int
  userId    String
  serviceId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user        User        @relation(fields: [userId], references: [id])
  service     Service     @relation(fields: [serviceId], references: [id])

  @@map("feedback")
}



model Order{
  id           String        @id @default(uuid())
  userId       String
  service_time DateTime
  status       Status        @default(pending)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  user         User          @relation(fields: [userId], references: [id])
  orderedService OrderedService[]
@@map("order")
}

model OrderedService{
  id String @id @default(uuid())
  orderId String
  serviceId String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  order  Order  @relation(fields: [orderId],references: [id])

  @@map("ordered_service")
}


enum Role{
  admin
  customer
  superAdmin
}

enum Status{
  pending
  approved
  working
  done
}